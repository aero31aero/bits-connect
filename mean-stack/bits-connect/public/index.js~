var dashboard = document.getElementById("dashboard");
var auth_page = document.getElementById("auth_page");
var loader = null;

function getRequest() {
    var request = new XMLHttpRequest();
    return request;
}

function loadToasterOptions() {
    toastr.options = {
        "closeButton": false,
        "debug": false,
        "newestOnTop": true,
        "progressBar": true,
        "positionClass": "toast-top-right",
        "preventDuplicates": false,
        "onclick": null,
        "showDuration": "300",
        "hideDuration": "100",
        "timeOut": "10000",
        "extendedTimeOut": "0",
        "showEasing": "swing",
        "hideEasing": "linear",
        "showMethod": "fadeIn",
        "hideMethod": "fadeOut"

    }
};
loadToasterOptions();
var curuser = null;

function login(x) {
    loader = x.getElementsByClassName('loader')[0];
    loader.style.display = 'block';

    var username = document.getElementById('username').value;
    var password = document.getElementById('password').value;
    var user = {
        "username": username,
        "password": password
    }

    var request = getRequest();
    request.open("POST", "/users/search/authenticate");
    request.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
    request.setRequestHeader("Connection", "close");
    request.setRequestHeader("Authorization", "Basic " + btoa("56d3e239ecec66ce7d6b4470:56f2f4d882c1145a4588bdbe"));
    request.send(JSON.stringify(user));
    request.onreadystatechange = function () {
        if (request.readyState == 4 && request.status == 200) {
            var reply = JSON.parse(request.responseText);
            if (reply.error) {
                toastr.error("Well, Fuck", "Error");
                window.setTimeout(function ()
                    //shift the masses
                    {
                        loader.style.display = 'none';
                    }, 1000);
            } else {
                curuser = reply;
                window.setTimeout(function ()
                    //shift the masses
                    {
                        auth_page.classList.add('dying');
                        dashboard.style.display = 'block';
                        loader.style.display = 'none';
                    }, 1000);
                afterlogin();
            }
        }
    }

}

function register(x) {
    loader = x.getElementsByClassName('loader')[0];
    loader.style.display = 'block';
    var username = document.getElementById('username1').value;
    var password = document.getElementById('password1').value;
    var password1 = document.getElementById('password2').value;
    var bitsid = document.getElementById('bitsid1').value;
    if (validatereg(username, bitsid, password, password1) != "fail") {
        var user = {
            "username": username,
            "password": password,
            "bitsid": bitsid
        }

        var request = getRequest();
        request.open("POST", "/users");
        request.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
        request.setRequestHeader("Connection", "close");
        request.setRequestHeader("Authorization", "Basic " + btoa("56d3e239ecec66ce7d6b4470:56f2f4d882c1145a4588bdbe"));
        request.send(JSON.stringify(user));
        request.onreadystatechange = function () {
            if (request.readyState == 4 && request.status == 200) {
                var reply = JSON.parse(request.responseText);
                if (reply.error) {
                    toastr.error("Well, Fuck", "Error");
                    window.setTimeout(function ()
                        //shift the masses
                        {
                            loader.style.display = 'none';
                        }, 1000);
                } else {
                    curuser = reply;
                    window.setTimeout(function ()
                        //shift the masses
                        {
                            auth_page.classList.add('dying');
                            dashboard.style.display = 'block';
                            loader.style.display = 'none';
                        }, 1000);
                }
            }
        }
    }
}

function afterlogin() {
    document.getElementById('emailp').innerHTML = curuser[0].bitsid + '@hyderabad.bits-pilani.ac.in';
    document.getElementById('userp').innerHTML = curuser[0].username;
    loadconnectedapps();

}


function loadconnectedapps() {
    var request = getRequest();
    request.open("GET", "/users/" + curuser[0]._id);
    request.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
    request.setRequestHeader("Connection", "close");
    request.setRequestHeader("Authorization", "Basic " + btoa("56d3e239ecec66ce7d6b4470:56f2f4d882c1145a4588bdbe"));
    request.send({});
    request.onreadystatechange = function () {
        if (request.readyState == 4 && request.status == 200) {
            var reply = JSON.parse(request.responseText);
            var testdata = '';
            for (i = 0; i < reply.apps.length; i++) {
                // console.log(reply.apps[i].appid);
                window.setTimeout(queryappname(reply.apps[i].appid), 10000);
            }
        }
    }
}

function queryappname(appid) {
    var request = getRequest();
    request.open("GET", "/apps/" + appid);
    request.setRequestHeader("Content-Type", "application/json;charset=UTF-8");
    request.setRequestHeader("Connection", "close");
    request.setRequestHeader("Authorization", "Basic " + btoa("56d3e239ecec66ce7d6b4470:56f2f4d882c1145a4588bdbe"));
    request.send({});
    request.onreadystatechange = function () {
        if (request.readyState == 4 && request.status == 200) {
            var reply = JSON.parse(request.responseText);
            document.getElementById("userWork").innerHTML += '<span>' + reply.appname + '<i class="more material-icons">arrow_drop_down</i></span>';

        }
    }
}


function validatereg(username, bitsid, password, password2) {
    var nameRegex = /^[a-zA-Z\-\d]+$/;
    var bitsidRegex = /[fh](20)\d{5}/g;
    var validfirstUsername = username.match(nameRegex);
    var validbitsid = bitsid.match(bitsidRegex);
    if (validfirstUsername == null) {
        //        swal({
        //              title: "Oops!",
        //              text: "I'm sorry but the username you entered is invalid. Please make sure it contains only alphabets and numbers.",
        //              type: "error",
        //              confirmButtonText: "Okay!"
        //        });
        toastr.error('Please use alphabets and numbers.', 'Username Invalid');
        return "fail";
    }
    if (password != password2) {
        //        swal({
        //              title: "Oops!",
        //              text: "I'm sorry but the username you entered is invalid. Please make sure it contains only alphabets and numbers.",
        //              type: "error",
        //              confirmButtonText: "Okay!"
        //        });
        toastr.error('The passwords don\'t match', 'Your typing sucks!');
        return "fail";
    }
    if (validbitsid == null || bitsid.length != 8) {
        //        swal({
        //              title: "Oops!",
        //              text: "I'm sorry but the username you entered is invalid. Please make sure it contains only alphabets and numbers.",
        //              type: "error",
        //              confirmButtonText: "Okay!"
        //        });
        toastr.error('Please enter the ID in the format mentioned.', 'Bits ID Invalid');
        return "fail";
    }
    if (password.length < 8 || password.length > 40) {
        //        swal({
        //             title: "Oops!",
        //             text: "I'm sorry but the password you entered is too short. .",
        //             type: "error",
        //             confirmButtonText: "Okay!"
        //        });
        toastr.error('Enter a password between 8 and 40 characters.', 'Password Invalid');
        return "fail";
    }
    return "success";
}
